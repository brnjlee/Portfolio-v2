{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _invariant = require('fbjs/lib/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _THREEElementDescriptor = require('../THREEElementDescriptor');\n\nvar _THREEElementDescriptor2 = _interopRequireDefault(_THREEElementDescriptor);\n\nvar _UniformContainer = require('../../UniformContainer');\n\nvar _UniformContainer2 = _interopRequireDefault(_UniformContainer);\n\nvar _Uniform = require('../../Uniform');\n\nvar _Uniform2 = _interopRequireDefault(_Uniform);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar UniformsDescriptor = function (_THREEElementDescript) {\n  _inherits(UniformsDescriptor, _THREEElementDescript);\n\n  function UniformsDescriptor() {\n    _classCallCheck(this, UniformsDescriptor);\n\n    return _possibleConstructorReturn(this, (UniformsDescriptor.__proto__ || Object.getPrototypeOf(UniformsDescriptor)).apply(this, arguments));\n  }\n\n  _createClass(UniformsDescriptor, [{\n    key: 'construct',\n    value: function construct() {\n      return new _UniformContainer2.default();\n    }\n  }, {\n    key: 'setParent',\n    value: function setParent(threeObject, parentObject3D) {\n      (0, _invariant2.default)(parentObject3D instanceof THREE.ShaderMaterial, 'Parent of <uniforms/> is not a shader material');\n\n      _get(UniformsDescriptor.prototype.__proto__ || Object.getPrototypeOf(UniformsDescriptor.prototype), 'setParent', this).call(this, threeObject, parentObject3D);\n\n      parentObject3D.uniforms = threeObject.uniforms;\n    }\n  }, {\n    key: 'addChildren',\n    value: function addChildren(threeObject, children) {\n      children.forEach(function (child) {\n        (0, _invariant2.default)(child instanceof _Uniform2.default, 'The <uniforms/> component can only have <uniform/> elements as children.');\n      });\n    }\n  }, {\n    key: 'highlight',\n    value: function highlight(threeObject) {\n      var parent = threeObject.userData.markup.parentMarkup.threeObject;\n\n      parent.userData._descriptor.highlight(parent);\n    }\n  }, {\n    key: 'getBoundingBoxes',\n    value: function getBoundingBoxes(threeObject) {\n      var parent = threeObject.userData.markup.parentMarkup.threeObject;\n      return parent.userData._descriptor.getBoundingBoxes(parent);\n    }\n  }, {\n    key: 'hideHighlight',\n    value: function hideHighlight(threeObject) {\n      var parent = threeObject.userData.markup.parentMarkup.threeObject;\n\n      parent.userData._descriptor.hideHighlight(parent);\n    }\n  }]);\n\n  return UniformsDescriptor;\n}(_THREEElementDescriptor2.default);\n\nmodule.exports = UniformsDescriptor;","map":null,"metadata":{},"sourceType":"script"}