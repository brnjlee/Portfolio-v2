{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _class;\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _invariant = require('fbjs/lib/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _warning = require('fbjs/lib/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _THREEElementDescriptor = require('../THREEElementDescriptor');\n\nvar _THREEElementDescriptor2 = _interopRequireDefault(_THREEElementDescriptor);\n\nvar _resource = require('../decorators/resource');\n\nvar _resource2 = _interopRequireDefault(_resource);\n\nvar _ResourceReference = require('../../Resources/ResourceReference');\n\nvar _ResourceReference2 = _interopRequireDefault(_ResourceReference);\n\nvar _propTypeInstanceOf = require('../../utils/propTypeInstanceOf');\n\nvar _propTypeInstanceOf2 = _interopRequireDefault(_propTypeInstanceOf);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MaterialDescriptorBase = (0, _resource2.default)(_class = function (_THREEElementDescript) {\n  _inherits(MaterialDescriptorBase, _THREEElementDescript);\n\n  function MaterialDescriptorBase(react3Instance) {\n    _classCallCheck(this, MaterialDescriptorBase);\n\n    var _this = _possibleConstructorReturn(this, (MaterialDescriptorBase.__proto__ || Object.getPrototypeOf(MaterialDescriptorBase)).call(this, react3Instance));\n\n    _this._invalidChild = function (child) {\n      return _this.invalidChildInternal(child);\n    };\n\n    _this.hasProp('slot', {\n      type: _propTypes2.default.string,\n      updateInitial: true,\n      update: function update(threeObject, slot, hasProperty) {\n        if (hasProperty) {\n          threeObject.userData._materialSlot = slot;\n        } else {\n          threeObject.userData._materialSlot = 'material';\n        }\n      },\n      default: 'material'\n    });\n\n    _this.hasProp('transparent', {\n      type: _propTypes2.default.bool,\n      simple: true\n    });\n\n    _this.hasProp('alphaTest', {\n      type: _propTypes2.default.number,\n      updateInitial: true,\n      update: function update(threeObject, alphaTest) {\n        threeObject.alphaTest = alphaTest;\n        threeObject.needsUpdate = true;\n      },\n      default: 0\n    });\n\n    _this.hasProp('side', {\n      type: _propTypes2.default.oneOf([THREE.FrontSide, THREE.BackSide, THREE.DoubleSide]),\n      updateInitial: true,\n      update: function update(threeObject, side) {\n        threeObject.side = side;\n      },\n      default: THREE.FrontSide\n    });\n\n    _this.hasProp('depthTest', {\n      type: _propTypes2.default.bool,\n      simple: true,\n      default: true\n    });\n\n    _this.hasProp('depthWrite', {\n      type: _propTypes2.default.bool,\n      simple: true,\n      default: true\n    });\n\n    _this.hasProp('blending', {\n      type: _propTypes2.default.oneOf([THREE.NoBlending, THREE.NormalBlending, THREE.AdditiveBlending, THREE.SubtractiveBlending, THREE.MultiplyBlending, THREE.CustomBlending]),\n      simple: true,\n      default: THREE.NormalBlending\n    });\n\n    _this.hasProp('depthFunc', {\n      type: _propTypes2.default.oneOf([THREE.NeverDepth, THREE.AlwaysDepth, THREE.LessDepth, THREE.LessEqualDepth, THREE.EqualDepth, THREE.GreaterEqualDepth, THREE.GreaterDepth, THREE.NotEqualDepth]),\n      simple: true,\n      default: THREE.LessEqualDepth\n    });\n\n    _this.hasProp('opacity', {\n      type: _propTypes2.default.number,\n      simple: true\n    });\n\n    _this.hasProp('visible', {\n      type: _propTypes2.default.bool,\n      simple: true,\n      default: true\n    });\n\n    _this.hasProp('vertexColors', {\n      type: _propTypes2.default.oneOf([THREE.NoColors, THREE.FaceColors, THREE.VertexColors]),\n      simple: true,\n      default: THREE.NoColors\n    });\n\n    _this._colors = [];\n    _this._supportedMaps = {};\n    return _this;\n  }\n\n  _createClass(MaterialDescriptorBase, [{\n    key: 'hasMap',\n    value: function hasMap() {\n      var mapPropertyName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'map';\n      this._supportedMaps[mapPropertyName] = true;\n      this.hasProp(mapPropertyName, {\n        type: (0, _propTypeInstanceOf2.default)(THREE.Texture),\n        update: function update(threeObject, value) {\n          threeObject.userData['_' + mapPropertyName + '}Property'] = value;\n\n          if (!threeObject.userData['_has' + mapPropertyName + '}TextureChild']) {\n            if (threeObject[mapPropertyName] !== value) {\n              threeObject.needsUpdate = true;\n            }\n\n            threeObject[mapPropertyName] = value;\n          } else {\n            var slotInfo = 'texture';\n\n            if (mapPropertyName !== 'map') {\n              slotInfo += 'with a \\'' + mapPropertyName + '\\' slot';\n            }\n\n            (0, _warning2.default)(value === null, 'The material already has a' + (' ' + slotInfo + ' assigned to it as a child;') + (' therefore the \\'' + mapPropertyName + '\\' property will have no effect'));\n          }\n        },\n        updateInitial: true,\n        default: null\n      });\n    }\n  }, {\n    key: 'getMaterialDescription',\n    value: function getMaterialDescription(props) {\n      var materialDescription = {};\n\n      this._colors.forEach(function (colorPropName) {\n        if (props.hasOwnProperty(colorPropName)) {\n          materialDescription[colorPropName] = props[colorPropName];\n        }\n      });\n\n      if (props.hasOwnProperty('side')) {\n        materialDescription.side = props.side;\n      }\n\n      return materialDescription;\n    }\n  }, {\n    key: 'hasColor',\n    value: function hasColor() {\n      var propName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'color';\n      var defaultVal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffffff;\n\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _invariant2.default)(this._colors.indexOf(propName) === -1, 'This color is already defined for %s.', this.constructor.name);\n      }\n\n      this._colors.push(propName);\n\n      this.hasProp(propName, {\n        type: _propTypes2.default.oneOfType([(0, _propTypeInstanceOf2.default)(THREE.Color), _propTypes2.default.number, _propTypes2.default.string]),\n        update: function update(threeObject, value) {\n          threeObject[propName].set(value);\n        },\n        default: defaultVal\n      });\n    }\n  }, {\n    key: 'hasWireframe',\n    value: function hasWireframe() {\n      this.hasProp('wireframe', {\n        type: _propTypes2.default.bool,\n        simple: true,\n        default: false\n      });\n      this.hasProp('wireframeLinewidth', {\n        type: _propTypes2.default.number,\n        simple: true,\n        default: 1\n      });\n    }\n  }, {\n    key: 'construct',\n    value: function construct() {\n      return new THREE.Material({});\n    }\n  }, {\n    key: 'applyInitialProps',\n    value: function applyInitialProps(threeObject, props) {\n      threeObject.userData = _extends({}, threeObject.userData, {\n        _hasTextureChild: false\n      });\n\n      _get(MaterialDescriptorBase.prototype.__proto__ || Object.getPrototypeOf(MaterialDescriptorBase.prototype), 'applyInitialProps', this).call(this, threeObject, props);\n    }\n  }, {\n    key: 'setParent',\n    value: function setParent(material, parentObject3D) {\n      (0, _invariant2.default)(parentObject3D instanceof THREE.Mesh || parentObject3D instanceof THREE.Points || parentObject3D instanceof THREE.Sprite || parentObject3D instanceof THREE.Line, 'Parent is not a mesh');\n      (0, _invariant2.default)(parentObject3D[material.userData._materialSlot] === undefined || parentObject3D[material.userData._materialSlot] === null, 'Parent already has a ' + material.userData._materialSlot + ' defined');\n\n      _get(MaterialDescriptorBase.prototype.__proto__ || Object.getPrototypeOf(MaterialDescriptorBase.prototype), 'setParent', this).call(this, material, parentObject3D);\n\n      parentObject3D[material.userData._materialSlot] = material;\n    }\n  }, {\n    key: 'unmount',\n    value: function unmount(material) {\n      var parent = material.userData.markup.parentMarkup.threeObject; // could either be a resource description or an actual material\n\n      if (parent instanceof THREE.Mesh || parent instanceof THREE.Sprite || parent instanceof THREE.Line || parent instanceof THREE.Points) {\n        var slot = material.userData._materialSlot;\n\n        if (parent[slot] === material) {\n          // TODO: set material slot to null rather than undefined\n          parent[slot] = undefined;\n        }\n      }\n\n      material.dispose();\n\n      _get(MaterialDescriptorBase.prototype.__proto__ || Object.getPrototypeOf(MaterialDescriptorBase.prototype), 'unmount', this).call(this, material);\n    }\n  }, {\n    key: 'highlight',\n    value: function highlight(threeObject) {\n      var ownerMesh = threeObject.userData.markup.parentMarkup.threeObject;\n      threeObject.userData.events.emit('highlight', {\n        uuid: threeObject.uuid,\n        boundingBoxFunc: function boundingBoxFunc() {\n          var boundingBox = new THREE.Box3();\n\n          if (ownerMesh && ownerMesh.geometry && ownerMesh.geometry.computeBoundingBox) {\n            ownerMesh.geometry.computeBoundingBox();\n          }\n\n          boundingBox.setFromObject(ownerMesh);\n          return [boundingBox];\n        }\n      });\n    }\n  }, {\n    key: 'getBoundingBoxes',\n    value: function getBoundingBoxes(threeObject) {\n      var boundingBox = new THREE.Box3();\n      var ownerMesh = threeObject.userData.markup.parentMarkup.threeObject;\n\n      if (ownerMesh && ownerMesh.geometry && ownerMesh.geometry.computeBoundingBox) {\n        ownerMesh.geometry.computeBoundingBox();\n      }\n\n      boundingBox.setFromObject(ownerMesh);\n      return [boundingBox];\n    }\n  }, {\n    key: 'hideHighlight',\n    value: function hideHighlight(threeObject) {\n      threeObject.userData.events.emit('hideHighlight');\n    }\n  }, {\n    key: 'addChildren',\n    value: function addChildren(threeObject, children) {\n      (0, _invariant2.default)(children.filter(this._invalidChild).length === 0, 'Material children can only be textures or texture resource references!');\n    }\n  }, {\n    key: 'addChild',\n    value: function addChild(threeObject, child) {\n      this.addChildren(threeObject, [child]);\n    }\n  }, {\n    key: 'moveChild',\n    value: function moveChild() {// doesn't matter\n    }\n  }, {\n    key: 'removeChild',\n    value: function removeChild() {// doesn't matter since the texture will take care of things on unmount\n    }\n  }, {\n    key: 'invalidChildInternal',\n    value: function invalidChildInternal(child) {\n      return !(child instanceof THREE.Texture || child instanceof _ResourceReference2.default);\n    }\n  }]);\n\n  return MaterialDescriptorBase;\n}(_THREEElementDescriptor2.default)) || _class;\n\nmodule.exports = MaterialDescriptorBase;","map":null,"metadata":{},"sourceType":"script"}