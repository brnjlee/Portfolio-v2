{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _ReactPropTypeLocationNames = require('react/lib/ReactPropTypeLocationNames');\n\nvar _ReactPropTypeLocationNames2 = _interopRequireDefault(_ReactPropTypeLocationNames);\n\nvar _THREEElementDescriptor = require('./THREEElementDescriptor');\n\nvar _THREEElementDescriptor2 = _interopRequireDefault(_THREEElementDescriptor);\n\nvar _Module = require('../Module');\n\nvar _Module2 = _interopRequireDefault(_Module);\n\nvar _PropTypeError = require('../utils/PropTypeError');\n\nvar _PropTypeError2 = _interopRequireDefault(_PropTypeError);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Returns class name of the object, if any.\n// Used for the subclass proptype checker\n\n\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return '<<anonymous>>';\n  }\n\n  return propValue.constructor.name;\n}\n\nvar ModuleDescriptor = function (_THREEElementDescript) {\n  _inherits(ModuleDescriptor, _THREEElementDescript);\n\n  function ModuleDescriptor(react3RendererInstance) {\n    _classCallCheck(this, ModuleDescriptor);\n\n    var _this = _possibleConstructorReturn(this, (ModuleDescriptor.__proto__ || Object.getPrototypeOf(ModuleDescriptor)).call(this, react3RendererInstance));\n\n    var moduleSubclassValidator = function moduleSubclassValidator(props, propName, componentName, location, propFullName) {\n      var locationName = _ReactPropTypeLocationNames2.default[location];\n\n      if (!props[propName]) {\n        return new _PropTypeError2.default('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n      }\n\n      if (!(props[propName].prototype instanceof _Module2.default)) {\n        var actualClassName = getClassName(props[propName]);\n        return new _PropTypeError2.default('Invalid ' + locationName + ' `' + propFullName + '` ' + ('of type `' + actualClassName + '` supplied to `' + componentName + '`, ') + 'expected subclass of `Module`.');\n      } // success returns undefined\n\n\n      return undefined;\n    };\n\n    moduleSubclassValidator.toString = function () {\n      return '```' + ' subclass of ReactThreeRenderer.Module ' + '```' + ' *' + '```' + ' required ' + '```' + '*';\n    };\n\n    _this.hasProp('descriptor', {\n      type: moduleSubclassValidator,\n      update: _this.triggerRemount,\n      default: undefined\n    });\n\n    return _this;\n  }\n\n  _createClass(ModuleDescriptor, [{\n    key: 'construct',\n    value: function construct(props) {\n      // going insane here but... let's... just do this.\n      var ModuleClass = props.descriptor;\n      return new ModuleClass();\n    }\n  }, {\n    key: 'applyInitialProps',\n    value: function applyInitialProps(threeObject, props) {\n      _get(ModuleDescriptor.prototype.__proto__ || Object.getPrototypeOf(ModuleDescriptor.prototype), 'applyInitialProps', this).call(this, threeObject, props);\n\n      threeObject.setup(this.react3RendererInstance);\n    }\n  }, {\n    key: 'unmount',\n    value: function unmount(threeObject) {\n      threeObject.dispose();\n\n      _get(ModuleDescriptor.prototype.__proto__ || Object.getPrototypeOf(ModuleDescriptor.prototype), 'unmount', this).call(this, threeObject);\n    }\n  }]);\n\n  return ModuleDescriptor;\n}(_THREEElementDescriptor2.default);\n\nmodule.exports = ModuleDescriptor;","map":null,"metadata":{},"sourceType":"script"}