{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _invariant = require('fbjs/lib/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Object3DDescriptor2 = require('./Object3DDescriptor');\n\nvar _Object3DDescriptor3 = _interopRequireDefault(_Object3DDescriptor2);\n\nvar _ResourceReference = require('../../Resources/ResourceReference');\n\nvar _ResourceReference2 = _interopRequireDefault(_ResourceReference);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SpriteDescriptor = function (_Object3DDescriptor) {\n  _inherits(SpriteDescriptor, _Object3DDescriptor);\n\n  function SpriteDescriptor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SpriteDescriptor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SpriteDescriptor.__proto__ || Object.getPrototypeOf(SpriteDescriptor)).call.apply(_ref, [this].concat(args))), _this), _this._invalidChild = function (child) {\n      var invalid = !(child instanceof THREE.SpriteMaterial || child instanceof _ResourceReference2.default);\n      return invalid;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(SpriteDescriptor, [{\n    key: 'construct',\n    value: function construct(props) {\n      var material = props.hasOwnProperty('material') ? props.material : undefined;\n      var sprite = new THREE.Sprite(material);\n\n      if (!material) {\n        sprite.material.dispose();\n        sprite.material = undefined;\n      }\n\n      return sprite;\n    }\n  }, {\n    key: 'addChildren',\n    value: function addChildren(threeObject, children) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _invariant2.default)(children.filter(this._invalidChild).length === 0, 'Sprite children can only be materials!');\n      } else {\n        (0, _invariant2.default)(children.filter(this._invalidChild).length === 0, false);\n      }\n    }\n  }, {\n    key: 'addChild',\n    value: function addChild(threeObject, child) {\n      this.addChildren(threeObject, [child]);\n    }\n  }, {\n    key: 'moveChild',\n    value: function moveChild() {// doesn't matter\n    }\n  }]);\n\n  return SpriteDescriptor;\n}(_Object3DDescriptor3.default);\n\nmodule.exports = SpriteDescriptor;","map":null,"metadata":{},"sourceType":"script"}