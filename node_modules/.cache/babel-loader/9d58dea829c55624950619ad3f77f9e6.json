{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\r\n * @abstract\r\n */\n\n\nvar ShapeAction = function () {\n  function ShapeAction() {\n    _classCallCheck(this, ShapeAction);\n\n    this.uuid = THREE.Math.generateUUID();\n    this.userData = {};\n  }\n\n  _createClass(ShapeAction, [{\n    key: 'performAction',\n    value: function performAction(shape) {// eslint-disable-line no-unused-vars\n      // to be done by subclasses\n    }\n  }]);\n\n  return ShapeAction;\n}();\n\nmodule.exports = ShapeAction;","map":null,"metadata":{},"sourceType":"script"}