{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _class;\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _invariant = require('fbjs/lib/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _warning = require('fbjs/lib/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _resource = require('../decorators/resource');\n\nvar _resource2 = _interopRequireDefault(_resource);\n\nvar _THREEElementDescriptor = require('../THREEElementDescriptor');\n\nvar _THREEElementDescriptor2 = _interopRequireDefault(_THREEElementDescriptor);\n\nvar _Uniform = require('../../Uniform');\n\nvar _Uniform2 = _interopRequireDefault(_Uniform);\n\nvar _React3Renderer = require('../../React3Renderer');\n\nvar _React3Renderer2 = _interopRequireDefault(_React3Renderer);\n\nvar _propTypeInstanceOf = require('../../utils/propTypeInstanceOf');\n\nvar _propTypeInstanceOf2 = _interopRequireDefault(_propTypeInstanceOf);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TextureDescriptor = (0, _resource2.default)(_class = function (_THREEElementDescript) {\n  _inherits(TextureDescriptor, _THREEElementDescript);\n\n  function TextureDescriptor(react3RendererInstance) {\n    _classCallCheck(this, TextureDescriptor);\n\n    var _this = _possibleConstructorReturn(this, (TextureDescriptor.__proto__ || Object.getPrototypeOf(TextureDescriptor)).call(this, react3RendererInstance));\n\n    _this.hasProp('slot', {\n      type: _propTypes2.default.oneOf(['map', 'specularMap', 'lightMap', 'aoMap', 'emissiveMap', 'bumpMap', 'normalMap', 'displacementMap', 'roughnessMap', 'metalnessMap', 'alphaMap', 'envMap']),\n      updateInitial: true,\n      update: function update(texture, slot) {\n        var lastSlot = texture.userData._materialSlot;\n        texture.userData._materialSlot = slot;\n\n        if (texture.userData.markup) {\n          var parentMarkup = texture.userData.markup.parentMarkup;\n\n          if (parentMarkup) {\n            var parent = parentMarkup.threeObject;\n\n            if (parent instanceof THREE.Material) {\n              if (process.env.NODE_ENV !== 'production') {\n                _this.validateParentSlot(parent, slot);\n              } // remove from previous slot and assign to new slot\n              // TODO add test for this\n\n\n              _this.removeFromSlotOfMaterial(parent, lastSlot, texture);\n\n              _this.addToSlotOfMaterial(parent, slot, texture);\n            }\n          }\n        }\n      },\n      default: 'map'\n    });\n\n    _this.hasProp('repeat', {\n      type: (0, _propTypeInstanceOf2.default)(THREE.Vector2),\n      updateInitial: true,\n      update: function update(threeObject, repeat) {\n        if (repeat) {\n          threeObject.repeat.copy(repeat);\n        } else {\n          threeObject.repeat.set(1, 1);\n        }\n      },\n      default: new THREE.Vector2(1, 1)\n    });\n\n    _this.hasProp('offset', {\n      type: (0, _propTypeInstanceOf2.default)(THREE.Vector2),\n      updateInitial: true,\n      update: function update(threeObject, offset) {\n        if (offset) {\n          threeObject.offset.copy(offset);\n        } else {\n          threeObject.offset.set(0, 0);\n        }\n      },\n      default: new THREE.Vector2(0, 0)\n    });\n\n    ['wrapS', 'wrapT'].forEach(function (propName) {\n      _this.hasProp(propName, {\n        type: _propTypes2.default.oneOf([THREE.RepeatWrapping, THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping]),\n        updateInitial: true,\n        update: function update(threeObject, value) {\n          threeObject[propName] = value;\n\n          if (threeObject.image) {\n            threeObject.needsUpdate = true;\n          }\n        },\n        default: THREE.ClampToEdgeWrapping\n      });\n    });\n\n    _this.hasProp('anisotropy', {\n      type: _propTypes2.default.number,\n      updateInitial: true,\n      update: function update(threeObject, value) {\n        threeObject.anisotropy = value;\n\n        if (threeObject.image) {\n          threeObject.needsUpdate = true;\n        }\n      },\n      default: 1\n    });\n\n    _this.hasProp('url', {\n      type: _propTypes2.default.string.isRequired,\n      update: _this.triggerRemount,\n      default: ''\n    });\n\n    _this.hasProp('crossOrigin', {\n      type: _propTypes2.default.string,\n      update: _this.triggerRemount,\n      default: undefined\n    });\n\n    ['onLoad', 'onProgress', 'onError'].forEach(function (eventName) {\n      _this.hasProp(eventName, {\n        type: _propTypes2.default.func,\n        update: function update() {// do nothing because these props are only used for initial loading callbacks\n        },\n        default: undefined\n      });\n    });\n\n    _this.hasProp('magFilter', {\n      type: _propTypes2.default.oneOf([THREE.LinearFilter, THREE.NearestFilter]),\n      update: function update(texture, magFilter) {\n        texture.magFilter = magFilter;\n\n        if (texture.image) {\n          texture.needsUpdate = true;\n        }\n      },\n      default: THREE.LinearFilter\n    });\n\n    _this.hasProp('minFilter', {\n      type: _propTypes2.default.oneOf([THREE.LinearMipMapLinearFilter, THREE.NearestFilter, THREE.NearestMipMapNearestFilter, THREE.NearestMipMapLinearFilter, THREE.LinearFilter, THREE.LinearMipMapNearestFilter]),\n      update: function update(texture, minFilter) {\n        texture.minFilter = minFilter;\n\n        if (texture.image) {\n          texture.needsUpdate = true;\n        }\n      },\n      default: THREE.LinearMipMapLinearFilter\n    });\n\n    return _this;\n  }\n\n  _createClass(TextureDescriptor, [{\n    key: 'construct',\n    value: function construct(props) {\n      var result = void 0;\n\n      if (props.hasOwnProperty('url')) {\n        var textureLoader = new THREE.TextureLoader();\n\n        if (props.hasOwnProperty('crossOrigin')) {\n          textureLoader.crossOrigin = props.crossOrigin;\n        }\n\n        var onLoad = void 0;\n        var onProgress = void 0;\n        var onError = void 0;\n\n        if (props.hasOwnProperty('onLoad')) {\n          onLoad = props.onLoad;\n        }\n\n        if (props.hasOwnProperty('onProgress')) {\n          onProgress = props.onProgress;\n        }\n\n        if (props.hasOwnProperty('onError')) {\n          onError = props.onError;\n        }\n\n        result = textureLoader.load(props.url, onLoad, onProgress, onError);\n\n        if (props.hasOwnProperty('minFilter')) {\n          result.minFilter = props.minFilter;\n        }\n      } else {\n        (0, _invariant2.default)(false, 'The texture needs a url property.');\n      }\n\n      return result;\n    }\n  }, {\n    key: 'setParent',\n    value: function setParent(texture, parent) {\n      if (parent instanceof THREE.Material) {\n        var slot = texture.userData._materialSlot;\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.validateParentSlot(parent, slot);\n        }\n\n        this.addToSlotOfMaterial(parent, slot, texture);\n      } else if (parent instanceof _Uniform2.default) {\n        // Uniform as per the assert above\n        parent.setValue(texture);\n      } else {\n        (0, _invariant2.default)(false, 'Parent of a texture is not a material nor a uniform, it needs to be one of them.');\n      }\n\n      _get(TextureDescriptor.prototype.__proto__ || Object.getPrototypeOf(TextureDescriptor.prototype), 'setParent', this).call(this, texture, parent);\n    }\n  }, {\n    key: 'applyInitialProps',\n    value: function applyInitialProps(threeObject, props) {\n      threeObject.userData = _extends({}, threeObject.userData);\n\n      _get(TextureDescriptor.prototype.__proto__ || Object.getPrototypeOf(TextureDescriptor.prototype), 'applyInitialProps', this).call(this, threeObject, props);\n    }\n  }, {\n    key: 'unmount',\n    value: function unmount(texture) {\n      var parent = texture.userData.markup.parentMarkup.threeObject;\n      var slot = texture.userData._materialSlot; // could either be a resource description or an actual texture\n\n      if (parent instanceof THREE.Material) {\n        this.removeFromSlotOfMaterial(parent, slot, texture);\n      } else if (parent instanceof _Uniform2.default) {\n        if (parent.value === texture) {\n          parent.setValue(null);\n        }\n      }\n\n      texture.dispose();\n\n      _get(TextureDescriptor.prototype.__proto__ || Object.getPrototypeOf(TextureDescriptor.prototype), 'unmount', this).call(this, texture);\n    }\n  }, {\n    key: 'removeFromSlotOfMaterial',\n    value: function removeFromSlotOfMaterial(material, slot, texture) {\n      if (material[slot] === texture) {\n        material.userData['_has' + slot + '}TextureChild'] = false;\n\n        if (material.userData['_' + slot + '}Property']) {\n          // restore the map property\n          material[slot] = material.userData['_' + slot + '}Property'];\n        } else {\n          material[slot] = null;\n        }\n\n        material.needsUpdate = true;\n      }\n    }\n  }, {\n    key: 'addToSlotOfMaterial',\n    value: function addToSlotOfMaterial(material, slot, texture) {\n      material.userData['_has' + slot + '}TextureChild'] = true;\n\n      if (material.userData['_' + slot + '}Property']) {\n        var slotInfo = 'texture';\n\n        if (slot !== 'map') {\n          slotInfo += 'with a \\'' + slot + '\\' slot';\n        }\n\n        (0, _warning2.default)(false, 'The material already has a' + (' \\'' + slot + '\\' property but a ' + slotInfo + ' is being added as a child.') + ' The child will override the property.');\n      } else {// removing invariant to enable slot swapping\n      }\n\n      if (material[slot] !== texture) {\n        material[slot] = texture;\n      }\n    }\n  }, {\n    key: 'validateParentSlot',\n    value: function validateParentSlot(parent, slot) {\n      var react3internalComponent = parent.userData.react3internalComponent;\n\n      if (react3internalComponent) {\n        var descriptor = react3internalComponent.threeElementDescriptor;\n\n        if (descriptor && !descriptor._supportedMaps[slot]) {\n          // TODO add test for this\n          (0, _warning2.default)(false, 'A texture cannot be assigned as a \\'' + slot + '\\' to \\'' + parent.type + '\\'');\n        }\n      }\n    }\n  }, {\n    key: 'highlight',\n    value: function highlight(threeObject) {\n      var parent = threeObject.userData.markup.parentMarkup.threeObject;\n\n      parent.userData._descriptor.highlight(parent);\n    }\n  }, {\n    key: 'hideHighlight',\n    value: function hideHighlight(threeObject) {\n      var parent = threeObject.userData.markup.parentMarkup.threeObject;\n\n      parent.userData._descriptor.hideHighlight(parent);\n    }\n  }]);\n\n  return TextureDescriptor;\n}(_THREEElementDescriptor2.default)) || _class;\n\nmodule.exports = TextureDescriptor;","map":null,"metadata":{},"sourceType":"script"}