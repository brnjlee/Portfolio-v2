{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GeometryWithShapesDescriptor = require('./GeometryWithShapesDescriptor');\n\nvar _GeometryWithShapesDescriptor2 = _interopRequireDefault(_GeometryWithShapesDescriptor);\n\nvar _propTypeInstanceOf = require('../../utils/propTypeInstanceOf');\n\nvar _propTypeInstanceOf2 = _interopRequireDefault(_propTypeInstanceOf);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ExtrudeGeometryDescriptor = function (_GeometryWithShapesDe) {\n  _inherits(ExtrudeGeometryDescriptor, _GeometryWithShapesDe);\n\n  function ExtrudeGeometryDescriptor(react3RendererInstance) {\n    _classCallCheck(this, ExtrudeGeometryDescriptor);\n\n    var _this = _possibleConstructorReturn(this, (ExtrudeGeometryDescriptor.__proto__ || Object.getPrototypeOf(ExtrudeGeometryDescriptor)).call(this, react3RendererInstance));\n\n    _this.hasProp('settings', {\n      type: _propTypes2.default.any,\n      update: function update(threeObject, settings) {\n        threeObject.userData._settings = settings;\n      },\n      updateInitial: true,\n      default: undefined\n    });\n\n    _this.hasProp('UVGenerator', {\n      type: _propTypes2.default.shape({\n        generateTopUV: _propTypes2.default.func,\n        generateSideWallUV: _propTypes2.default.func\n      }),\n      update: function update(threeObject, value) {\n        if (value === undefined) {\n          delete threeObject.userData._options.UVGenerator;\n        } else {\n          threeObject.userData._options.UVGenerator = value;\n        }\n\n        threeObject.userData._needsToRefreshGeometry = true;\n      },\n      default: undefined\n    });\n\n    ['steps', 'amount', 'bevelThickness', 'bevelSize', 'bevelSegments', 'extrudeMaterial'].forEach(function (propName) {\n      _this.hasProp(propName, {\n        type: _propTypes2.default.number,\n        update: function update(threeObject, value) {\n          if (value === undefined) {\n            delete threeObject.userData._options[propName];\n          } else {\n            threeObject.userData._options[propName] = value;\n          }\n\n          threeObject.userData._needsToRefreshGeometry = true;\n        },\n        default: undefined\n      });\n    });\n    var extraNames = ['bevelEnabled', 'extrudePath', 'frames'];\n    var extraTypes = [_propTypes2.default.bool, // bevelEnabled\n    (0, _propTypeInstanceOf2.default)(THREE.CurvePath), // extrudePath\n    _propTypes2.default.shape({\n      tangents: _propTypes2.default.arrayOf((0, _propTypeInstanceOf2.default)(THREE.Vector3)),\n      normals: _propTypes2.default.arrayOf((0, _propTypeInstanceOf2.default)(THREE.Vector3)),\n      binormals: _propTypes2.default.arrayOf((0, _propTypeInstanceOf2.default)(THREE.Vector3))\n    })];\n    extraNames.forEach(function (propName, i) {\n      _this.hasProp(propName, {\n        type: extraTypes[i],\n        update: function update(threeObject, value) {\n          if (value === undefined) {\n            delete threeObject.userData._options[propName];\n          } else {\n            threeObject.userData._options[propName] = value;\n          }\n\n          threeObject.userData._needsToRefreshGeometry = true;\n        },\n        default: undefined\n      });\n    });\n    return _this;\n  } // noinspection JSMethodCanBeStatic\n\n\n  _createClass(ExtrudeGeometryDescriptor, [{\n    key: 'refreshGeometry',\n    value: function refreshGeometry(threeObject) {\n      var shapes = threeObject.userData._shapeCache.filter(function (shape) {\n        return !!shape;\n      }).concat(threeObject.userData._shapesFromProps);\n\n      threeObject.fromGeometry(new THREE.ExtrudeGeometry(shapes, _extends({}, threeObject.userData._options, threeObject.userData._settings)));\n    }\n  }, {\n    key: 'getOptions',\n    value: function getOptions(props) {\n      var options = _get(ExtrudeGeometryDescriptor.prototype.__proto__ || Object.getPrototypeOf(ExtrudeGeometryDescriptor.prototype), 'getOptions', this).call(this, props);\n\n      ['steps', 'amount', 'bevelEnabled', 'bevelThickness', 'bevelSize', 'bevelSegments', 'extrudePath', 'frames', 'extrudeMaterial'].forEach(function (propName) {\n        if (props.hasOwnProperty(propName)) {\n          options[propName] = props[propName];\n        }\n      });\n      return options;\n    }\n  }]);\n\n  return ExtrudeGeometryDescriptor;\n}(_GeometryWithShapesDescriptor2.default);\n\nmodule.exports = ExtrudeGeometryDescriptor;","map":null,"metadata":{},"sourceType":"script"}