{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Object3DDescriptor2 = require('../Object3DDescriptor');\n\nvar _Object3DDescriptor3 = _interopRequireDefault(_Object3DDescriptor2);\n\nvar _CameraUtils = require('../../../utils/CameraUtils');\n\nvar _CameraUtils2 = _interopRequireDefault(_CameraUtils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CameraHelperDescriptor = function (_Object3DDescriptor) {\n  _inherits(CameraHelperDescriptor, _Object3DDescriptor);\n\n  function CameraHelperDescriptor(react3Instance) {\n    _classCallCheck(this, CameraHelperDescriptor);\n\n    var _this = _possibleConstructorReturn(this, (CameraHelperDescriptor.__proto__ || Object.getPrototypeOf(CameraHelperDescriptor)).call(this, react3Instance));\n\n    _this.hasProp('visible', {\n      type: _propTypes2.default.bool,\n      override: true,\n      update: function update(threeObject, visible) {\n        threeObject.userData._visible = visible;\n        threeObject.visible = threeObject.userData._hasCamera && visible;\n      },\n      updateInitial: true,\n      default: true\n    });\n\n    _this.hasProp('cameraName', {\n      type: _propTypes2.default.string.isRequired,\n      update: function update(threeObject, cameraName) {\n        _this._clearCameraEvents(threeObject);\n\n        threeObject.userData._cameraName = cameraName;\n\n        _this._startCameraFinder(threeObject);\n      },\n      default: undefined\n    });\n\n    return _this;\n  }\n\n  _createClass(CameraHelperDescriptor, [{\n    key: 'construct',\n    value: function construct() {\n      return new THREE.CameraHelper(new THREE.PerspectiveCamera());\n    }\n  }, {\n    key: 'applyInitialProps',\n    value: function applyInitialProps(cameraHelper, props) {\n      var _this2 = this;\n\n      _get(CameraHelperDescriptor.prototype.__proto__ || Object.getPrototypeOf(CameraHelperDescriptor.prototype), 'applyInitialProps', this).call(this, cameraHelper, props);\n\n      cameraHelper.userData._onCameraProjectionUpdate = function () {\n        cameraHelper.update();\n      };\n\n      cameraHelper.userData._onCameraDispose = function () {\n        _this2._startCameraFinder(cameraHelper);\n      };\n\n      cameraHelper.userData._onCameraRename = function (payload) {\n        if (payload.oldName === cameraHelper.userData._cameraName) {\n          _this2._startCameraFinder(cameraHelper);\n        }\n      };\n\n      cameraHelper.userData._onBeforeRender = function () {\n        cameraHelper.visible = cameraHelper.userData._hasCamera && cameraHelper.userData._visible && _CameraUtils2.default.current !== cameraHelper.userData._camera;\n      };\n\n      cameraHelper.userData._cameraName = props.cameraName;\n      cameraHelper.userData._visible = props.hasOwnProperty('visible') ? props.visible : true;\n      cameraHelper.userData.events.once('addedIntoRoot', function () {\n        var rootInstance = cameraHelper.userData.markup._rootInstance;\n        rootInstance.addBeforeRenderListener(cameraHelper.userData._onBeforeRender);\n\n        _this2._startCameraFinder(cameraHelper);\n      });\n    }\n  }, {\n    key: 'unmount',\n    value: function unmount(threeObject) {\n      this._clearCameraEvents(threeObject);\n\n      delete threeObject.userData._onCameraProjectionUpdate;\n      return _get(CameraHelperDescriptor.prototype.__proto__ || Object.getPrototypeOf(CameraHelperDescriptor.prototype), 'unmount', this).call(this, threeObject);\n    }\n  }, {\n    key: '_getCamera',\n    value: function _getCamera(rootInstance, cameraName) {\n      var camera = null;\n\n      if (cameraName) {\n        var camerasByName = rootInstance.getObjectsByName(cameraName).filter(function (obj) {\n          return obj instanceof THREE.Camera;\n        });\n\n        if (camerasByName.length > 0) {\n          camera = camerasByName[0];\n        }\n      }\n\n      return camera;\n    }\n  }, {\n    key: '_clearCameraEvents',\n    value: function _clearCameraEvents(helper) {\n      if (helper.userData._hasCamera) {\n        helper.userData._camera.userData.events.removeListener('updateProjectionMatrix', helper.userData._onCameraProjectionUpdate);\n\n        helper.userData._camera.userData.events.removeListener('dispose', helper.userData._onCameraDispose);\n\n        helper.userData._camera.userData.events.removeListener('rename', helper.userData._onCameraRename);\n      }\n    }\n  }, {\n    key: '_setCamera',\n    value: function _setCamera(helper, camera) {\n      var userData = helper.userData;\n\n      if (userData._camera === camera) {\n        return;\n      }\n\n      this._clearCameraEvents(helper);\n\n      userData._hasCamera = true;\n      userData._camera = camera;\n      helper.camera = camera;\n      helper.matrix = camera.matrixWorld;\n      helper.update();\n      helper.visible = userData._visible;\n      var cameraEvents = helper.userData._camera.userData.events;\n      cameraEvents.on('rename', userData._onCameraRename);\n      cameraEvents.on('updateProjectionMatrix', userData._onCameraProjectionUpdate);\n      cameraEvents.once('dispose', userData._onCameraDispose);\n    }\n  }, {\n    key: '_startCameraFinder',\n    value: function _startCameraFinder(helper) {\n      var _this3 = this;\n\n      this._clearCameraEvents(helper);\n\n      var rootInstance = helper.userData.markup && helper.userData.markup._rootInstance;\n\n      if (!rootInstance) {\n        return;\n      }\n\n      helper.userData._hasCamera = false;\n      helper.userData._camera = null;\n      helper.camera = new THREE.PerspectiveCamera();\n      helper.visible = false;\n\n      var camera = this._getCamera(rootInstance, helper.userData._cameraName);\n\n      if (camera) {\n        this._setCamera(helper, camera);\n      } else {\n        // try to find camera before renders\n        var findCamera = function findCamera() {\n          var foundCamera = _this3._getCamera(rootInstance, helper.userData._cameraName);\n\n          if (foundCamera) {\n            rootInstance.removeAnimateListener(findCamera);\n\n            _this3._setCamera(helper, foundCamera);\n          }\n        };\n\n        rootInstance.addAnimateListener(findCamera);\n      }\n    }\n  }]);\n\n  return CameraHelperDescriptor;\n}(_Object3DDescriptor3.default);\n\nmodule.exports = CameraHelperDescriptor;","map":null,"metadata":{},"sourceType":"script"}